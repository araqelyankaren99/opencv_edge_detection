plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    namespace 'com.example.opencv_edge_detection'
    compileSdk flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    defaultConfig {
        minSdk 23
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17 -fexceptions -frtti -static-libstdc++"
                // ðŸ‘‡ This ensures static STL
                arguments "-DANDROID_STL=c++_static"
            }
        }

        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
        }
        debug {
            debuggable true
        }
    }

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/opencv']
        }
    }

    packagingOptions {
        jniLibs.useLegacyPackaging = true
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.8.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:2.0.21"
}
